import messaging, {
  getMessaging,
  getToken,
  onMessage,
  isDeviceRegisteredForRemoteMessages,
  registerDeviceForRemoteMessages,
  requestPermission,
} from '@react-native-firebase/messaging';
import {getApp} from '@react-native-firebase/app';

import {Alert} from 'react-native';

/**
 * Y√™u c·∫ßu quy·ªÅn v√† l·∫•y FCM token
 */
export const setupFCM = async (): Promise<string | null> => {
  try {
    const app = getApp();
    const messagingInstance = getMessaging(app);

    const authStatus = await requestPermission(messagingInstance);
    const enabled =
      authStatus === messaging.AuthorizationStatus.AUTHORIZED ||
      authStatus === messaging.AuthorizationStatus.PROVISIONAL;

    if (!enabled) {
      console.log('üîí Notification permission not granted');
      return null;
    }

    const isRegistered = isDeviceRegisteredForRemoteMessages(messagingInstance);
    if (!isRegistered) {
      await registerDeviceForRemoteMessages(messagingInstance);
    }

    // L·∫•y FCM token
    const fcmToken = await getToken(messagingInstance);
    console.log('üì≤ FCM Token:', fcmToken);

    return fcmToken;
  } catch (error) {
    console.error('‚ùå Error setting up FCM:', error);
    return null;
  }
};

/**
 * X·ª≠ l√Ω th√¥ng b√°o khi app ƒëang m·ªü
 */
export const listenToForegroundNotifications = () => {
  const app = getApp();
  const messagingInstance = getMessaging(app);

  const unsubscribe = onMessage(messagingInstance, async remoteMessage => {
    console.log('üì¨ Foreground FCM Message:', remoteMessage);

    // Hi·ªÉn th·ªã Alert ho·∫∑c hi·ªÉn th·ªã popup t√πy √Ω
    Alert.alert(
      remoteMessage.notification?.title || 'Th√¥ng b√°o',
      remoteMessage.notification?.body || '',
    );
  });

  return unsubscribe;
};
